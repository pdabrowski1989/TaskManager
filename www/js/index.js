"use strict";angular.module("TaskManager",["ui.router"]);
"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}var DashboardCtrl=function DashboardCtrl($http){function a(){dCtrl.user={username:dCtrl.username,password:dCtrl.password},$http.post("/api/users",dCtrl.user).then(function(res){dCtrl.users=res.data,console.log(dCtrl.users)})}_classCallCheck(this,DashboardCtrl);var dCtrl=this;dCtrl.a=a,dCtrl.user={},$http.get("/api/users").then(function(res){dCtrl.users=res.data,console.log(dCtrl.users)})};angular.module("TaskManager").controller("DashboardCtrl",DashboardCtrl);
"use strict";!function(){function DashboardConfig($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/logIn"),$stateProvider.state("dashboard",{url:"/dashboard",controller:"DashboardCtrl",controllerAs:"dCtrl",templateUrl:"../app/Dashboard/dashboard.html"})}angular.module("TaskManager").config(DashboardConfig)}();
"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}var LogInCtrl=function LogInCtrl(LogInService){_classCallCheck(this,LogInCtrl);var lCtrl=this;lCtrl.displayAlert=!0,lCtrl.alertType={}};angular.module("TaskManager").controller("LogInCtrl",LogInCtrl);
"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}var LogInService=function LogInService($http){_classCallCheck(this,LogInService)};angular.module("TaskManager").service("LogInService",LogInService);
"use strict";!function(){function LogInConfig($stateProvider){$stateProvider.state("logIn",{url:"/logIn",controller:"LogInCtrl",controllerAs:"lCtrl",templateUrl:"../app/LogIn/login.html"})}angular.module("TaskManager").config(LogInConfig)}();
"use strict";!function(){function SignInConfig($stateProvider){$stateProvider.state("signIn",{url:"/signIn",controller:"SignInCtrl",controllerAs:"sCtrl",templateUrl:"../app/SignIn/signin.html"})}angular.module("TaskManager").config(SignInConfig)}();
"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}var SignInCtrl=function SignInCtrl(SignInService){function createUser(){sCtrl.user={username:sCtrl.username,password:sCtrl.password,email:sCtrl.email},SignInService.createUser(sCtrl.user)}_classCallCheck(this,SignInCtrl);var sCtrl=this;sCtrl.createUser=createUser};angular.module("TaskManager").controller("SignInCtrl",SignInCtrl);
"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}var SignInService=function SignInService($http,$q){function checkIfUsernameIsTaken(username){return $http.get("/api/users/"+username).then(function(res){res.data?sService.isTaken=!0:sService.isTaken=!1,deferred.resolve(sService.isTaken)}),deferred.promise}function createUser(user){sService.checkIfUsernameIsTaken(user.username).success(function(){console.log(sService.isTaken),sService.isTaken===!1&&$http.post("/api/users",user).then(function(res){console.log(res.data)})})}_classCallCheck(this,SignInService);var sService=this,deferred=$q.defer();sService.createUser=createUser,sService.checkIfUsernameIsTaken=checkIfUsernameIsTaken,sService.isTaken=!1};angular.module("TaskManager").service("SignInService",SignInService);